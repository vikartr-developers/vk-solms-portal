name: Deploy Node.js App

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 23.9.0

      #   Install Dependencies (Optional)
      # - name: Install Dependencies
      #   run: npm install

      # Step 3: Set up SSH Agent with Private Key (Secure Authentication)
      - name: Install SSH Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }} # Use the GitHub secret for your SSH private key


      # Step 4: Add Server Host Key 
      - name: Add Server Host Key
        run: ssh-keyscan -H your-server-ip >> ~/.ssh/known_hosts
        shell: bash

      # Step 5: Deploy Node.js App to server
      # No sshpass needed. SSH agent handles authentication.
      # `rsync` will automatically use the SSH configured by ssh-agent.
      - name: Deploy Node.js App Files
        run: rsync -avz --delete -e "ssh" . root@your-server-ip:/path/to/your/app/

      # Step 6: Configure Environment Variables 
      - name: Configure Environment Variables on Server
        env:
          PORT: ${{ secrets.PORT }}
          MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          SMTP_SERVER_HOST: ${{ secrets.SMTP_SERVER_HOST }}
          SMTP_SERVER_USERNAME: ${{ secrets.SMTP_SERVER_USERNAME }}
          SMTP_SERVER_PASSWORD: ${{ secrets.SMTP_SERVER_PASSWORD }}
          FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
        run: |
          ssh root@your-server-ip "
            cd /path/to/your/app/
            cat <<EOF > .env
            PORT=${PORT}
            MONGO_PASSWORD=${MONGO_PASSWORD}
            MONGO_URI=${MONGO_URI}
            JWT_SECRET=${JWT_SECRET}
            ADMIN_EMAIL=${ADMIN_EMAIL}
            ADMIN_PASSWORD=${ADMIN_PASSWORD}
            SMTP_SERVER_HOST=${SMTP_SERVER_HOST}
            SMTP_SERVER_USERNAME=${SMTP_SERVER_USERNAME}
            SMTP_SERVER_PASSWORD=${SMTP_SERVER_PASSWORD}
            FROM_EMAIL=${FROM_EMAIL}
            EOF
          "

      # Step 7: Install Server Dependencies and Restart PM2
      - name: Install Server Dependencies and Restart PM2
        run: |
          ssh root@your-server-ip "
          cd /path/to/your/app/

          pm2 stop my-node-app || true

          rm -rf node_modules package-lock.json

          npm install

          echo 'MongoDB schema changes typically handled by application logic or custom scripts.'
            
          pm2 restart my-node-app || pm2 start npm --name \"my-node-app\" -- run prod-start
          
          pm2 save # Saves the current PM2 process list so it restarts on server reboot
          "