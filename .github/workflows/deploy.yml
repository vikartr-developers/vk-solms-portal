name: Deploy Salary Slip

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with: 
          node-version: 20.5.0
          
      - name: Check Node.js Version
        run: node -v

      # Step 3: Install sshpass
      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      # Step 4: Verify SSH Password
      - name: Verify Password
        run: |
          if [ -z "$SERVER_PASSWORD" ]; then
            echo "Error: SERVER_PASSWORD is not set."
            exit 1
          else
            echo "SERVER_PASSWORD is set."
          fi
        env:
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}

        # Step 5: Deploy Node.js App to Server
      - name: Deploy Node.js App
        env:
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
        run: |
          sshpass -p "$SERVER_PASSWORD" rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no -vvv" . root@64.227.173.10:/var/www/html/salary-slip/

      # Step 6: Set Environment Variables
      - name: Configure Environment Variables
        env:
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          PORT: ${{ secrets.PORT }}
          MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          SMTP_SERVER_HOST: ${{ secrets.SMTP_SERVER_HOST }}
          SMTP_SERVER_USERNAME: ${{ secrets.SMTP_SERVER_USERNAME }}
          SMTP_SERVER_PASSWORD: ${{ secrets.SMTP_SERVER_PASSWORD }}
          FROM_MAIL: ${{ secrets.FROM_MAIL }}
          REACT_APP_BACKEND_URL: ${{ secrets.REACT_APP_BACKEND_URL }}

        run: |
          sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no root@64.227.173.10 <<EOF
          cd /var/www/html/salary-slip/
          echo "PORT=${PORT}" >> .env
          echo "MONGO_PASSWORD=${MONGO_PASSWORD}" >> .env
          echo "MONGO_URI=${MONGO_URI}" >> .env
          echo "JWT_SECRET=${JWT_SECRET}" >> .env
          echo "ADMIN_EMAIL=${ADMIN_EMAIL}" >> .env
          echo "ADMIN_PASSWORD=${ADMIN_PASSWORD}" >> .env
          echo "SMTP_SERVER_HOST=${SMTP_SERVER_HOST}" >> .env
          echo "SMTP_SERVER_USERNAME=${SMTP_SERVER_USERNAME}" >> .env
          echo "SMTP_SERVER_PASSWORD=${SMTP_SERVER_PASSWORD}" >> .env
          echo "FROM_MAIL=${FROM_MAIL}" >> .env
          echo "REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL}" >> .env
          EOF

      # step 7: Install Dependencies and build
      - name: Set up Environment Variables for Build
        run: |
          echo "REACT_APP_BACKEND_URL=${{ secrets.REACT_APP_BACKEND_URL }}" > ./frontend/.env

      - name: Install and Build
        run: |
          cd ./frontend
          npm install
          CI=false npm run build

      - name: Deploy Front
        env:
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
        run: |
          sshpass -p "$SERVER_PASSWORD" rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no -vvv" ./frontend/build/ root@64.227.173.10:/var/www/html/salary-slip/frontend/

      # Step 8: Restart PM2 on Server
      - name: Restart PM2
        env:
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
        run: |
          sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no root@64.227.173.10 <<EOF
          cd /var/www/html/salary-slip
          sudo apt remove nodejs -y
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get install -y nodejs
          node -v
          # Install PM2 globally
          npm install -g pm2
          pm2 list | grep -q "node-salary-slip" && pm2 stop node-salary-slip || echo "PM2 process 'node-salary-slip' not found. Skipping stop."
          rm -rf node_modules package-lock.json
          cp .env /var/www/html/salary-slip/backend/
          cd /var/www/html/salary-slip/backend
          npm install --force
          echo "Npm Installed successfully."
          # npm run build
          PORT=9005 pm2 restart node-salary-slip || PORT=9005 pm2 start npm --name "node-salary-slip" -- run start
          pm2 save
          EOF
